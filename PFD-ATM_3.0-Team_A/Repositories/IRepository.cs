using PFD_ATM_3._0_Team_A.Models;
using System.Collections.Generic;

namespace PFD_ATM_3._0_Team_A.Repositories
{
    public interface IRepository<MODEL, ID> where MODEL : IModel<ID>
    {
        #region SELECT
        /// <summary>
        ///     Get a <typeparamref name="MODEL"/> from database using <typeparamref name="ID"/>
        /// </summary>
        /// <param name="id"><typeparamref name="ID"/> of the <typeparamref name="MODEL"/></param>
        /// <returns><typeparamref name="MODEL"/> that has the given <typeparamref name="ID"/> will be return</returns>
        public MODEL FindByID(ID id);

        /// <summary>
        ///     Get all <typeparamref name="MODEL"/> from database
        /// </summary>
        /// <returns>A list of <typeparamref name="MODEL"/> will be return</returns>
        public List<MODEL> FindAll();
        #endregion

        #region IS EXIST
        /// <summary>
        ///     Check if the given <typeparamref name="MODEL"/>.<typeparamref name="ID"/> of already exist in database
        /// </summary>
        /// <param name="id"><typeparamref name="ID"/> of the <typeparamref name="MODEL"/></param>
        /// <returns>true if there are <b>AT LEAST</b> 1 <typeparamref name="MODEL"/> with the given <typeparamref name="ID"/> exist in database else false</returns>
        public bool IsExistByID(ID id);
        #endregion

        #region INSERT, UPDATE
        /// <summary>
        ///     Method behaviour depends on whether the id is given or not. <br />
        ///     If the id is given, <see cref="UpdateByID(MODEL)"/> will be execute <br />
        ///     If the id is not given, <see cref="Insert(MODEL)"/> will be execute
        /// </summary>
        /// <param name="model"><typeparamref name="MODEL"/> that need to be save</param>
        /// <returns>Saved <typeparamref name="MODEL"/> will be return</returns>
        public MODEL Save(MODEL model);
        /// <summary>
        ///     Insert a new record of <typeparamref name="MODEL"/> to the database<br />
        ///     <i><typeparamref name="ID"/> generated by database will be <b>INCLUDED</b> in the given <typeparamref name="MODEL"/></i>
        /// </summary>
        /// <param name="model"><typeparamref name="MODEL"/> that need to be save</param>
        /// <returns>An inserted <typeparamref name="MODEL"/> will be return</returns>
        public MODEL Insert(MODEL model);
        /// <summary>
        ///     Update the existing <typeparamref name="MODEL"/> using <typeparamref name="ID"/><br />
        ///     <i><typeparamref name="ID"/> <b>MUST</b> be provided in the <typeparamref name="MODEL"/></i>
        /// </summary>
        /// <param name="model"><typeparamref name="MODEL"/> that need to be update</param>
        /// <returns>An updated <typeparamref name="MODEL"/> will be return</returns>
        public MODEL UpdateByID(MODEL model);
        #endregion

        #region DELETE
        /// <summary>
        ///     Delete the existing <typeparamref name="MODEL"/> using <typeparamref name="ID"/>
        /// </summary>
        /// <param name="id"><typeparamref name="ID"/> of the <typeparamref name="MODEL"/></param>
        /// <returns>A number that indicate how many row(s) is/are deleted from the database</returns>
        public int DeleteByID(ID id);
        #endregion
    }
}
